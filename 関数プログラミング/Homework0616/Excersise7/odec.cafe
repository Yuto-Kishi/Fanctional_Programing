open NAT .

op _! : Nat -> Nat .

op if_then {_} else {_} : Bool Nat Nat -> Nat .

-- 補助オペレータ g はそのまま使用
op g : Nat Nat -> Nat .

-- 変数を宣言
vars X Y : Nat . var NzX : NzNat .

eq if true then { X } else { Y } = X .
eq if false then { X } else { Y } = Y .

eq g(X,Y) = if X > Y then { g(X, 2 * Y) * g(sd(X,Y), 2 * Y) } else { X } .

eq 0 ! = 1 . 
eq NzX ! = g(NzX,1) .

-- テストケースも _! オペレータの形式で記述
red 0 ! .
red 1 ! .
red 5 ! .
red 10 ! .


close .